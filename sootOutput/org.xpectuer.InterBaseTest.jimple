public abstract class org.xpectuer.InterBaseTest extends org.xpectuer.IntraBaseTest
{

    public void <init>()
    {
        org.xpectuer.InterBaseTest this;

        this := @this: org.xpectuer.InterBaseTest;

        specialinvoke this.<org.xpectuer.IntraBaseTest: void <init>()>();

        return;
    }

    public void test()
    {
        org.xpectuer.InterBaseTest this;
        java.lang.String packPhaseName, transformerPhaseName;
        soot.Transformer transformer;
        soot.Transform $stack8, transform;
        soot.PackManager $stack9, $stack11;
        soot.Pack $stack10, $stack12;

        this := @this: org.xpectuer.InterBaseTest;

        packPhaseName = virtualinvoke this.<org.xpectuer.InterBaseTest: java.lang.String getPhaseNameOfPack()>();

        transformerPhaseName = virtualinvoke this.<org.xpectuer.InterBaseTest: java.lang.String getPhaseNameOfTransformer()>();

        transformer = virtualinvoke this.<org.xpectuer.InterBaseTest: soot.Transformer getTransformer()>();

        $stack8 = new soot.Transform;

        specialinvoke $stack8.<soot.Transform: void <init>(java.lang.String,soot.Transformer)>(transformerPhaseName, transformer);

        transform = $stack8;

        $stack9 = staticinvoke <soot.PackManager: soot.PackManager v()>();

        $stack10 = virtualinvoke $stack9.<soot.PackManager: soot.Pack getPack(java.lang.String)>(packPhaseName);

        virtualinvoke $stack10.<soot.Pack: void add(soot.Transform)>(transform);

        $stack11 = staticinvoke <soot.PackManager: soot.PackManager v()>();

        $stack12 = virtualinvoke $stack11.<soot.PackManager: soot.Pack getPack(java.lang.String)>(packPhaseName);

        virtualinvoke $stack12.<soot.Pack: void apply()>();

        return;
    }
}
